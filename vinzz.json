{
  "html": "<div class='overlay' id='overlay'>\n  <div class='panel-wrap' id='panelWrap'>\n    <div class='panel' id='panel' role='dialog' aria-label='overlay-gui'>\n      <div class='hdr' id='hdr'>\n        <div class='left'>\n          <div class='title'>Overlay GUI</div>\n          <div class='meta'>Draggable • Tabs • Swipe actions</div>\n        </div>\n        <div class='actions'>\n          <button class='btn' id='inspectBtn' title='Inspect element'>🔍</button>\n          <button class='btn' id='addTabBtn' title='Add tab'>➕ Tab</button>\n          <button class='btn' id='saveBtn' title='Save'>💾</button>\n          <button class='btn' id='minBtn' title='Minimize'>—</button>\n          <button class='btn' id='closeBtn' title='Close'>✕</button>\n        </div>\n      </div>\n      <div class='tabs' id='tabs' role='tablist' aria-label='tabs'></div>\n      <div class='body' id='body' aria-live='polite'></div>\n      <div class='editor' id='editor'>\n        <input id='labelInput' class='input' placeholder='Label (mis. Refresh)' />\n        <select id='actionType' class='select'>\n          <option value='alert'>Alert</option>\n          <option value='log'>Console.log</option>\n          <option value='copy'>Copy text</option>\n          <option value='custom'>Custom JS</option>\n        </select>\n        <button class='btn' id='addBtn'>Add</button>\n      </div>\n    </div>\n  </div>\n</div>",
  "js": "(function(){\n  const $ = id => document.getElementById(id);\n  const toast = (m,t=1100)=>{ const e=document.createElement('div'); e.className='toast'; e.textContent=m; document.body.appendChild(e); setTimeout(()=>e.remove(),t); };\n  const STORE='overlay_gui_fixed_v1';\n  const genId=()=> 'id_'+Math.random().toString(36).slice(2,9);\n  let state={pos:{x:20,y:20},tabs:[{id:genId(),title:'Main',actions:[{id:genId(),label:'Hello',type:'alert',payload:'Halo!'}]}],active:0,minimized:false};\n  try{const raw=localStorage.getItem(STORE);if(raw)state=JSON.parse(raw);}catch(e){}\n  const panelWrap=$('panelWrap'),panel=$('panel'),hdr=$('hdr');\n  const tabsEl=$('tabs'),body=$('body'),editor=$('editor');\n  const labelInput=$('labelInput'),actionType=$('actionType'),addBtn=$('addBtn');\n  const addTabBtn=$('addTabBtn'),minBtn=$('minBtn'),closeBtn=$('closeBtn'),saveBtn=$('saveBtn'),inspectBtn=$('inspectBtn');\n  panelWrap.style.transform=`translate(${state.pos.x}px,${state.pos.y}px)`;\n  let dragging=false,startPointer={x:0,y:0},startPos={x:0,y:0};\n  hdr.addEventListener('pointerdown',e=>{e.preventDefault();hdr.setPointerCapture(e.pointerId);dragging=true;panel.classList.add('dragging');startPointer={x:e.clientX,y:e.clientY};startPos={x:state.pos.x,y:state.pos.y};});\n  document.addEventListener('pointermove',e=>{if(!dragging)return;e.preventDefault();const nx=startPos.x+(e.clientX-startPointer.x);const ny=startPos.y+(e.clientY-startPointer.y);state.pos.x=nx;state.pos.y=ny;panelWrap.style.transform=`translate(${nx}px,${ny}px)`;});\n  document.addEventListener('pointerup',e=>{if(!dragging)return;dragging=false;panel.classList.remove('dragging');try{localStorage.setItem(STORE,JSON.stringify(state));}catch(e){}});\n  function render(){\n    if(state.minimized){tabsEl.style.display='none';body.style.display='none';editor.style.display='none';minBtn.textContent='⬆';}\n    else{tabsEl.style.display='';body.style.display='';editor.style.display='';minBtn.textContent='—';}\n    tabsEl.innerHTML='';state.tabs.forEach((t,i)=>{const b=document.createElement('button');b.className='tab'+(i===state.active?' active':'');b.textContent=t.title;b.addEventListener('click',()=>{state.active=i;render();});tabsEl.appendChild(b);});\n    body.innerHTML='';const cur=state.tabs[state.active]||state.tabs[0];const row=document.createElement('div');row.className='panel-row';(cur.actions||[]).forEach(act=>{const btn=document.createElement('button');btn.className='action-btn';btn.textContent=act.label;btn.addEventListener('click',()=>runAction(act));row.appendChild(btn);});if((cur.actions||[]).length===0){const h=document.createElement('div');h.textContent='(No actions yet)';row.appendChild(h);}body.appendChild(row);\n  }\n  function runAction(act){try{if(act.type==='alert')alert(act.payload||act.label);else if(act.type==='log')console.log(act.payload||act.label);else if(act.type==='copy'){const txt=act.payload||act.label;navigator.clipboard.writeText(txt).then(()=>toast('Copied'));}else if(act.type==='custom'){(new Function(act.payload||''))();}}catch(e){}}\n  addBtn.addEventListener('click',()=>{const label=labelInput.value.trim();if(!label){toast('Masukkan label');return;}const type=actionType.value;let payload='';if(type==='alert')payload=prompt('Pesan alert:','Hello')||'';else if(type==='log')payload=prompt('Pesan console.log:',label)||'';else if(type==='copy')payload=prompt('Text untuk copy:',label)||'';else if(type==='custom')payload=prompt('Custom JS:','console.log(\\\"hi\\\")')||'';const cur=state.tabs[state.active]||state.tabs[0];cur.actions=cur.actions||[];cur.actions.push({id:genId(),label,type,payload});labelInput.value='';save();render();});\n  addTabBtn.addEventListener('click',()=>{const name=prompt('Nama tab baru:','Tools');if(!name)return;state.tabs.push({id:genId(),title:name,actions:[]});state.active=state.tabs.length-1;save();render();});\n  minBtn.addEventListener('click',()=>{state.minimized=!state.minimized;save();render();});\n  closeBtn.addEventListener('click',()=>{panelWrap.remove();toast('Panel closed');});\n  saveBtn.addEventListener('click',()=>{save();});\n  function save(){try{localStorage.setItem(STORE,JSON.stringify(state));toast('Saved');}catch(e){}}\n  render();\n})();"
}
